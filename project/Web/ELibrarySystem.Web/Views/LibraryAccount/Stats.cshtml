
@{
    ViewData["Title"] = "Stats";
}

<h1>Stats</h1>
<form asp-action="Stats" asp-route-returnUrl="@ViewData["URL"]">

    <div class="row">
        <div class="col-md-12">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group row">
                <label asp-for="SearchBook.BookName" class="control-label col-md-2">Заглавие на книгата</label>
                <input asp-for="SearchBook.BookName" class="form-control col-md-6" />
                <span asp-validation-for="SearchBook.BookName" class="text-danger col-md-4"></span>
            </div>
            <div class="form-group row">
                <label asp-for="SearchBook.Author" class="control-label col-md-2">Автор</label>
                <input asp-for="SearchBook.Author" class="form-control col-md-6" />
                <span asp-validation-for="SearchBook.Author" class="text-danger col-md-4"></span>
            </div>
            <div class="form-group row">
                <label asp-for="SearchBook.GenreId" class="control-label  col-md-2">Жанр</label>

                <select asp-for="SearchBook.GenreId" class="col-md-6">
                    @if (Model.Genres != null)
                    {
                        @foreach (var genre in Model.Genres)
                        {
                            <option value="@genre.Id">@genre.Name</option>

                        }
                    }

                </select>
                <span asp-validation-for="SearchBook.GenreId" class="text-danger col-md-4"></span>
            </div>



            <div class="form-group">
                <input type="submit" value="Търси" asp-action="StatsSearch" class="btn btn-default" />

            </div>


        </div>


    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="chart-container">
                <canvas id="chartGettenBookSinceSixМonth" style="width:100%; height:250px"></canvas>
            </div>
        </div>
        <div class="col-md-6">

            <div class="chart-container">
                <canvas id="chartAddedBookSinceSixМonth" style="width:100%; height:250px"></canvas>
            </div>
        </div>
    </div>

</form>
    @model ELibrarySystem.Web.ViewModels.LibraryAccount.StatsViewModel
    @{

        var labelGettenBookSinceSixМonth = Newtonsoft.Json.JsonConvert
            .SerializeObject(Model.ChartGettenBookSinceSixМonth
                .Titlle);

        var XLabelsGettenBookSinceSixМonth = Newtonsoft.Json.JsonConvert
            .SerializeObject(Model.ChartGettenBookSinceSixМonth
                .ChartData
                    .Select(x => x.Mounth)
                    .ToList());
        var YValuesGettenBookSinceSixМonth = Newtonsoft.Json.JsonConvert
            .SerializeObject(Model.ChartGettenBookSinceSixМonth
                .ChartData.Select(x => x.GettenBookCount)
                .ToList());
        var YValuesReturnedBookSinceSixМonth = Newtonsoft.Json.JsonConvert
        .SerializeObject(Model.ChartGettenBookSinceSixМonth
            .ChartData.Select(x => x.ReturnedBookCount)
            .ToList());

        var labelAddedBookSinceSixМonth = Newtonsoft.Json.JsonConvert
            .SerializeObject(Model.ChartAddedBookSinceSixМonth
                .Titlle);

        var XLabelsAddedBookSinceSixМonth = Newtonsoft.Json.JsonConvert
            .SerializeObject(Model.ChartAddedBookSinceSixМonth
                .ChartData
                    .Select(x => x.DimensionOne)
                    .ToList());
        var YValuesAddedBookSinceSixМonth = Newtonsoft.Json.JsonConvert
            .SerializeObject(Model.ChartAddedBookSinceSixМonth
                .ChartData
                    .Select(x => x.Quantity)
                    .ToList());
    }



    


    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

    <script type="text/javascript">

    $(function () {
        var chartName = "chartGettenBookSinceSixМonth";
        var ctx = document.getElementById(chartName).getContext('2d');
        var data = {
                labels: @Html.Raw(XLabelsGettenBookSinceSixМonth),
                datasets: [{
                    label: @Html.Raw(labelGettenBookSinceSixМonth),
                   
                    borderColor: [
                        'rgba(255,99,132,1)',
                    ],
                    borderWidth: 1,
                    data: @Html.Raw(YValuesGettenBookSinceSixМonth)
                },
                {
                    label: "проба",
                    borderColor: [
                        'rgba(100,99,132,1)',
                    ],
                    borderWidth: 1,
                    data: @Html.Raw(YValuesReturnedBookSinceSixМonth)
                }]
            };

        var options = {
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: true,
                            color: "rgba(255,99,164,0.2)"
                        }
                    }],
                    xAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: false
                        }
                    }]
                }
            };

        var myChart = new  Chart(ctx, {
                options: options,
                data: data,
                type:'line'
        });



        //Added

         var chartName = "chartAddedBookSinceSixМonth";
        var ctx = document.getElementById(chartName).getContext('2d');
        var data = {
                labels: @Html.Raw(XLabelsAddedBookSinceSixМonth),
                datasets: [{
                    label: @Html.Raw(labelAddedBookSinceSixМonth),
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                    ],
                    borderColor: [
                        'rgba(255,99,132,1)',
                    ],
                    borderWidth: 1,
                    data: @Html.Raw(YValuesAddedBookSinceSixМonth)
                }]
            };

        var options = {
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: true,
                            color: "rgba(255,99,164,0.2)"
                        }
                    }],
                    xAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: false
                        }
                    }]
                }
            };

        var myChart = new  Chart(ctx, {
                options: options,
                data: data,
                type:'line'
        });


     });
    </script>
